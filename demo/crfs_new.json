{
  "name" : "Chunking with CRFs",
  "cells" : [ {
    "id" : 0,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Load dataset from the CoNLL-2000 Chunking Shared Task\nval train = CoNLL2000.train.take(2).toSeq\nval labels = train.flatMap(_._2).distinct\nval words = train.flatMap(_._1).distinct\nwords.take(5)",
      "extraFields" : {
        "aggregatedCells" : "[]"
      },
      "outputFormat" : "<div class=\"string-result\"><div class=\"asIterable List\"><span class=\"typeName\">List</span>\n<ol start=\"0\" class=\"fields\">\n  <li class=\"fieldValue\"><span class=\"asString String\">Confidence</span></li>\n  <li class=\"fieldValue\"><span class=\"asString String\">in</span></li>\n  <li class=\"fieldValue\"><span class=\"asString String\">the</span></li>\n  <li class=\"fieldValue\"><span class=\"asString String\">pound</span></li>\n  <li class=\"fieldValue\"><span class=\"asString String\">is</span></li>\n</ol>\n</div></div>"
    }
  }, {
    "id" : 1,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Define the domain of inputs, outputs and parameters\nval maxLength = train.map(_._2.length).max\nimplicit val Inputs = Seqs(words.toDom withOOV \"[OOV]\", 0, maxLength)\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\nimplicit val Instances = Pairs(Inputs, Outputs)\nimplicit val Thetas = Vectors(dim = 20000)",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><span class=\"asString String\">ml.wolfe.term.VectorDom@39a49bd1</span></div>"
    }
  }, {
    "id" : 2,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Define the model\nimplicit val index = new SimpleIndex()\nimplicit val maxProductParams = MaxProductParameters(iterations = 1)\n\ndef biasTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) =\n    sum(0 until x.length)(i => t dot feature('bias, y(i)))\n    \ndef wordTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \n    sum(0 until x.length)(i => t dot feature('word, x(i), y(i)))\n    \ndef pairTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \n    sum(0 until x.length - 1)(i => t dot feature('pair, y(i), y(i+1)))\n    \ndef model(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y)\n} subjectTo (y.length === x.length) argmaxBy maxProduct",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\",\"// Define the domain of inputs, outputs and parameters\\nval maxLength = train.map(_._2.length).max\\nimplicit val Inputs = Seqs(words.toDom withOOV \\\"[OOV]\\\", 0, maxLength)\\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\\nimplicit val Instances = Pairs(Inputs, Outputs)\\nimplicit val Thetas = Vectors(dim = 20000)\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><div class=\"asProduct MaxProductParameters\"><span class=\"typeName\">MaxProductParameters</span>\n<ul class=\"fields\">\n  <li class=\"field\"><span class=\"fieldName\">iterations</span> <span class=\"fieldValue\"><span class=\"asString String\">1</span></span></li>\n</ul>\n</div></div>"
    }
  }, {
    "id" : 3,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Learn the parameters with AdaGrad\nimplicit val adagradParams = AdaGradParameters(epochs = 1, learningRate = 0.1)\n\nval thetaStar = learn(Thetas){ t =>\n    perceptron(train.toConst)(Outputs)(model(t))\n} using adaGrad\nthetaStar.toIndexedString",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\",\"// Define the domain of inputs, outputs and parameters\\nval maxLength = train.map(_._2.length).max\\nimplicit val Inputs = Seqs(words.toDom withOOV \\\"[OOV]\\\", 0, maxLength)\\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\\nimplicit val Instances = Pairs(Inputs, Outputs)\\nimplicit val Thetas = Vectors(dim = 20000)\",\"// Define the model\\nimplicit val index = new SimpleIndex()\\nimplicit val maxProductParams = MaxProductParameters(iterations = 1)\\n\\ndef biasTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) =\\n    sum(0 until x.length)(i => t dot feature('bias, y(i)))\\n    \\ndef wordTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length)(i => t dot feature('word, x(i), y(i)))\\n    \\ndef pairTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length - 1)(i => t dot feature('pair, y(i), y(i+1)))\\n    \\ndef model(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y)\\n} subjectTo (y.length === x.length) argmaxBy maxProduct\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><span class=\"asString String\">0.1894427190999916\tVector('pair, 2, 0)\n0.17071067811865476\tVector('word, 1, 1)\n0.17071067811865476\tVector('word, 33, 6)\n0.17071067811865476\tVector('pair, 0, 1)\n0.17071067811865476\tVector('pair, 1, 0)\n0.17071067811865476\tVector('pair, 0, 2)\n0.1447213595499958\tVector('pair, 4, 0)\n0.1242535625036333\tVector('bias, 1)\n0.1\tVector('bias, 5)\n0.1\tVector('bias, 6)\n0.1\tVector('word, 2, 0)\n0.1\tVector('word, 3, 2)\n0.1\tVector('word, 4, 3)\n0.1\tVector('word, 5, 4)\n0.1\tVector('word, 6, 4)\n0.1\tVector('word, 7, 4)\n0.1\tVector('word, 8, 4)\n0.1\tVector('word, 10, 2)\n0.1\tVector('word, 11, 2)\n0.1\tVector('word, 12, 5)\n0.1\tVector('word, 14, 2)\n0.1\tVector('word, 15, 1)\n0.1\tVector('word, 17, 6)\n0.1\tVector('word, 18, 7)\n0.1\tVector('word, 21, 3)\n0.1\tVector('word, 22, 4)\n0.1\tVector('word, 23, 0)\n0.1\tVector('word, 24, 2)\n0.1\tVector('word, 25, 2)\n0.1\tVector('word, 26, 1)\n0.1\tVector('word, 28, 2)\n0.1\tVector('word, 29, 2)\n0.1\tVector('word, 30, 0)\n0.1\tVector('word, 31, 2)\n0.1\tVector('word, 32, 2)\n0.1\tVector('pair, 2, 3)\n0.1\tVector('pair, 2, 5)\n0.1\tVector('pair, 5, 0)\n0.1\tVector('pair, 2, 1)\n0.1\tVector('pair, 0, 6)\n0.1\tVector('pair, 6, 1)\n0.1\tVector('word, 7, 1)\n0.1\tVector('word, 34, 6)\n0.1\tVector('word, 37, 0)\n0.1\tVector('word, 38, 2)\n0.1\tVector('word, 39, 2)\n0.1\tVector('word, 40, 2)\n0.1\tVector('word, 44, 3)\n0.1\tVector('word, 45, 4)\n0.1\tVector('word, 46, 4)\n0.1\tVector('word, 47, 2)\n0.1\tVector('word, 48, 0)\n0.1\tVector('word, 49, 1)\n0.1\tVector('word, 50, 2)\n0.1\tVector('word, 51, 2)\n0.0803883864861816\tVector('bias, 2)\n0.05527864045000421\tVector('bias, 3)\n0.05527864045000421\tVector('pair, 3, 4)\n0.05527864045000421\tVector('pair, 2, 2)\n0.04452998037747709\tVector('bias, 4)\n0.04000000000000001\tVector('pair, 4, 4)\n0.029289321881345254\tVector('bias, 7)\n0.029289321881345254\tVector('pair, 6, 7)\n0.029289321881345254\tVector('pair, 7, 1)\n0.029289321881345254\tVector('pair, 6, 3)\n0.029289321881345254\tVector('pair, 2, 6)\n-0.07490378412162739\tVector('bias, 0)\n-0.1\tVector('pair, 0, 0)\n-0.1\tVector('word, 33, 0)\n-0.1\tVector('word, 33, 2)\n-0.1\tVector('word, 32, 0)\n-0.1\tVector('pair, 1, 2)\n-0.1\tVector('pair, 4, 2)\n-0.1\tVector('word, 31, 0)\n-0.1\tVector('word, 30, 4)\n-0.1\tVector('word, 29, 0)\n-0.1\tVector('word, 28, 0)\n-0.1\tVector('word, 26, 0)\n-0.1\tVector('word, 25, 0)\n-0.1\tVector('word, 24, 0)\n-0.1\tVector('word, 23, 2)\n-0.1\tVector('word, 23, 7)\n-0.1\tVector('word, 22, 0)\n-0.1\tVector('word, 7, 0)\n-0.1\tVector('word, 7, 2)\n-0.1\tVector('word, 21, 0)\n-0.1\tVector('word, 17, 0)\n-0.1\tVector('word, 15, 0)\n-0.1\tVector('word, 18, 0)\n-0.1\tVector('word, 14, 0)\n-0.1\tVector('word, 12, 0)\n-0.1\tVector('word, 11, 0)\n-0.1\tVector('word, 10, 0)\n-0.1\tVector('word, 8, 0)\n-0.1\tVector('word, 6, 0)\n-0.1\tVector('word, 5, 0)\n-0.1\tVector('word, 4, 0)\n-0.1\tVector('word, 3, 0)\n-0.1\tVector('word, 2, 2)\n-0.1\tVector('word, 2, 3)\n-0.1\tVector('word, 1, 0)\n-0.1\tVector('word, 1, 2)\n-0.1\tVector('word, 51, 4)\n-0.1\tVector('word, 50, 4)\n-0.1\tVector('word, 49, 6)\n-0.1\tVector('word, 48, 2)\n-0.1\tVector('word, 47, 1)\n-0.1\tVector('word, 46, 6)\n-0.1\tVector('word, 45, 1)\n-0.1\tVector('word, 44, 2)\n-0.1\tVector('word, 40, 4)\n-0.1\tVector('word, 39, 4)\n-0.1\tVector('word, 38, 4)\n-0.1\tVector('word, 37, 3)\n-0.1\tVector('word, 34, 2)</span></div>"
    }
  }, {
    "id" : 4,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Predict the labels for an unseen test example\ndef predict(x:Inputs.Value) = argmax(Outputs){\n    model(thetaStar.toConst)(Inputs.Const(x))\n}\nval test = IndexedSeq(\"This\", \"is\", \"a\", \"test\")\nval result = predict(test).evalResult()",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\",\"// Define the domain of inputs, outputs and parameters\\nval maxLength = train.map(_._2.length).max\\nimplicit val Inputs = Seqs(words.toDom withOOV \\\"[OOV]\\\", 0, maxLength)\\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\\nimplicit val Instances = Pairs(Inputs, Outputs)\\nimplicit val Thetas = Vectors(dim = 20000)\",\"// Define the model\\nimplicit val index = new SimpleIndex()\\nimplicit val maxProductParams = MaxProductParameters(iterations = 1)\\n\\ndef biasTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) =\\n    sum(0 until x.length)(i => t dot feature('bias, y(i)))\\n    \\ndef wordTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length)(i => t dot feature('word, x(i), y(i)))\\n    \\ndef pairTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length - 1)(i => t dot feature('pair, y(i), y(i+1)))\\n    \\ndef model(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y)\\n} subjectTo (y.length === x.length) argmaxBy maxProduct\",\"// Learn the parameters with AdaGrad\\nimplicit val adagradPparams = AdaGradParameters(epochs = 1, learningRate = 0.1)\\n\\nval thetaStar = learn(Thetas){ t =>\\n    perceptron(train.toConst)(Outputs)(model(t))\\n} using adaGrad\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><span class=\"asString String\">Vector(O, B-PP, B-NP, B-PP)</span></div>"
    }
  }, {
    "id" : 5,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// The factor graph used in inference\nresult.factorGraphs.head",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\",\"// Define the domain of inputs, outputs and parameters\\nval maxLength = train.map(_._2.length).max\\nimplicit val Inputs = Seqs(words.toDom withOOV \\\"[OOV]\\\", 0, maxLength)\\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\\nimplicit val Instances = Pairs(Inputs, Outputs)\\nimplicit val Thetas = Vectors(dim = 20000)\",\"// Define the model\\nimplicit val index = new SimpleIndex()\\nimplicit val maxProductParams = MaxProductParameters(iterations = 1)\\n\\ndef biasTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) =\\n    sum(0 until x.length)(i => t dot feature('bias, y(i)))\\n    \\ndef wordTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length)(i => t dot feature('word, x(i), y(i)))\\n    \\ndef pairTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length - 1)(i => t dot feature('pair, y(i), y(i+1)))\\n    \\ndef model(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y)\\n} subjectTo (y.length === x.length) argmaxBy maxProduct\",\"// Learn the parameters with AdaGrad\\nimplicit val adagradPparams = AdaGradParameters(epochs = 1, learningRate = 0.1)\\n\\nval thetaStar = learn(Thetas){ t =>\\n    perceptron(train.toConst)(Outputs)(model(t))\\n} using adaGrad\",\"// Predict the labels for an unseen test example\\ndef predict(x:Inputs.Value) = argmax(Outputs){\\n    model(thetaStar.toConst)(Inputs.Const(x))\\n}\\nval test = IndexedSeq(\\\"This\\\", \\\"is\\\", \\\"a\\\", \\\"test\\\")\\nval result = predict(test).evalResult()\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><div id=\"fg-537537940720325216\"><div class=\"playbtn\">Play</div><svg class=\"factorgraph\" width=\"750\" height=\"300\" style=\"overflow: visible;\"><defs><marker id=\"markerArrow0\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow1\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow2\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow3\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow4\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow5\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow6\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow7\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow8\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow9\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow10\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow11\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow12\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow13\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow14\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker></defs><line class=\"link\" x1=\"280.87513994163396\" y1=\"104.92482204250403\" x2=\"314\" y2=\"164\"></line><line class=\"link\" x1=\"368.37375184544396\" y1=\"271.5102218294818\" x2=\"400.65454151548414\" y2=\"208.79826268964746\"></line><line class=\"link\" x1=\"496.1561941747286\" y1=\"96.82269659087568\" x2=\"543.4601177332319\" y2=\"148.8375351224947\"></line><line class=\"link\" x1=\"703.8815737750359\" y1=\"89.30266351242858\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"247.3477633463867\" y1=\"185.795886463267\" x2=\"314\" y2=\"164\"></line><line class=\"link\" x1=\"427.29152039818564\" y1=\"269.7325735148818\" x2=\"400.65454151548414\" y2=\"208.79826268964746\"></line><line class=\"link\" x1=\"546.3550128245489\" y1=\"79.50085823511029\" x2=\"543.4601177332319\" y2=\"148.8375351224947\"></line><line class=\"link\" x1=\"700.5457497691766\" y1=\"210.51632145369794\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"333.75523173231267\" y1=\"217.99309962623911\" x2=\"314\" y2=\"164\"></line><line class=\"link\" x1=\"333.75523173231267\" y1=\"217.99309962623911\" x2=\"400.65454151548414\" y2=\"208.79826268964746\"></line><line class=\"link\" x1=\"469.49010470360093\" y1=\"176.4728120300905\" x2=\"400.65454151548414\" y2=\"208.79826268964746\"></line><line class=\"link\" x1=\"469.49010470360093\" y1=\"176.4728120300905\" x2=\"543.4601177332319\" y2=\"148.8375351224947\"></line><line class=\"link\" x1=\"629.1587975510621\" y1=\"150.63831287377985\" x2=\"543.4601177332319\" y2=\"148.8375351224947\"></line><line class=\"link\" x1=\"629.1587975510621\" y1=\"150.63831287377985\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"113.88815984215744\" y1=\"65.07844931206957\" x2=\"158.1720160611488\" y2=\"25\"></line><path class=\"fgshape fgnode\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(158.1720160611488,25)\"></path><path class=\"fgshape fgnode fgfixed\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(314,164)\"></path><path class=\"fgshape fgnode\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(400.65454151548414,208.79826268964746)\"></path><path class=\"fgshape fgnode\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(543.4601177332319,148.8375351224947)\"></path><path class=\"fgshape fgnode fgfixed\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(725,150)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(280.87513994163396,104.92482204250403)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(368.37375184544396,271.5102218294818)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(496.1561941747286,96.82269659087568)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(703.8815737750359,89.30266351242858)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(247.3477633463867,185.795886463267)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(427.29152039818564,269.7325735148818)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(546.3550128245489,79.50085823511029)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(700.5457497691766,210.51632145369794)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(333.75523173231267,217.99309962623911)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(469.49010470360093,176.4728120300905)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(629.1587975510621,150.63831287377985)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(113.88815984215744,65.07844931206957)\"></path><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(158.1720160611488,25)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(314,164)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(400.65454151548414,208.79826268964746)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(543.4601177332319,148.8375351224947)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(725,150)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(280.87513994163396,104.92482204250403)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(368.37375184544396,271.5102218294818)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(496.1561941747286,96.82269659087568)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(703.8815737750359,89.30266351242858)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(247.3477633463867,185.795886463267)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(427.29152039818564,269.7325735148818)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(546.3550128245489,79.50085823511029)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(700.5457497691766,210.51632145369794)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(333.75523173231267,217.99309962623911)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(469.49010470360093,176.4728120300905)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(629.1587975510621,150.63831287377985)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(113.88815984215744,65.07844931206957)\" style=\"font-size: 15px;\"></text><foreignObject class=\"tooltip\" width=\"350\" height=\"500\" style=\"opacity: 0;\" transform=\"translate(393.46011773323187,74)\"><div class=\"tooltipinner\"><table class=\"potentialtable\"><tbody><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.9181403487173659</td></tr><tr><td>B-PP</td><td>0.7516227766016839</td></tr><tr><td>I-NP</td><td>0.684894560608927</td></tr><tr><td>B-VP</td><td>0.6916227766016838</td></tr><tr><td>I-VP</td><td>0.6276043366352357</td></tr><tr><td>B-SBAR</td><td>0.6916227766016838</td></tr><tr><td>O</td><td>0.8232455532033676</td></tr><tr><td>B-ADJP</td><td>0.7916227766016838</td></tr></tbody></table></div></foreignObject></svg></div>\n\n <link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/stylesheets/factorgraph/fg.css\">\n\n<script type=\"text/javascript\">\n             var fgScriptLocation;\n             if (typeof fgScriptLocation === 'undefined') {\n                fgScriptLocation = \"/assets/javascripts/factorgraph/fg.js\";\n                head.js(fgScriptLocation);\n             }\n             head.ready(function() {\n                var fgData =\n{\"width\": 750,\n\"height\": 300,\n\"graph\": {\"nodes\": [{\"x\": 661.7984853857453,\n\"y\": 61.957510276635595,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>LengthGroundAtom(_hidden)</i></td><td></td></tr><tr><td>0</td><td>-Infinity</td></tr><tr><td>1</td><td>-Infinity</td></tr><tr><td>2</td><td>-Infinity</td></tr><tr><td>3</td><td>-Infinity</td></tr><tr><td>4</td><td>0.0</td></tr><tr><td>5</td><td>-Infinity</td></tr><tr><td>6</td><td>-Infinity</td></tr><tr><td>7</td><td>-Infinity</td></tr><tr><td>8</td><td>-Infinity</td></tr><tr><td>9</td><td>-Infinity</td></tr><tr><td>10</td><td>-Infinity</td></tr><tr><td>11</td><td>-Infinity</td></tr><tr><td>12</td><td>-Infinity</td></tr><tr><td>13</td><td>-Infinity</td></tr><tr><td>14</td><td>-Infinity</td></tr><tr><td>15</td><td>-Infinity</td></tr><tr><td>16</td><td>-Infinity</td></tr><tr><td>17</td><td>-Infinity</td></tr><tr><td>18</td><td>-Infinity</td></tr><tr><td>19</td><td>-Infinity</td></tr><tr><td>20</td><td>-Infinity</td></tr><tr><td>21</td><td>-Infinity</td></tr><tr><td>22</td><td>-Infinity</td></tr><tr><td>23</td><td>-Infinity</td></tr><tr><td>24</td><td>-Infinity</td></tr><tr><td>25</td><td>-Infinity</td></tr><tr><td>26</td><td>-Infinity</td></tr><tr><td>27</td><td>-Infinity</td></tr><tr><td>28</td><td>-Infinity</td></tr><tr><td>29</td><td>-Infinity</td></tr><tr><td>30</td><td>-Infinity</td></tr><tr><td>31</td><td>-Infinity</td></tr><tr><td>32</td><td>-Infinity</td></tr><tr><td>33</td><td>-Infinity</td></tr><tr><td>34</td><td>-Infinity</td></tr><tr><td>35</td><td>-Infinity</td></tr><tr><td>36</td><td>-Infinity</td></tr><tr><td>37</td><td>-Infinity</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": false,\n\"type\": \"node\"},\n{\"x\": 0,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.7823244661127096</td></tr><tr><td>B-PP</td><td>0.8465175721156821</td></tr><tr><td>I-NP</td><td>0.8797893561229252</td></tr><tr><td>B-VP</td><td>0.7865175721156821</td></tr><tr><td>I-VP</td><td>0.7224991321492341</td></tr><tr><td>B-SBAR</td><td>0.7865175721156821</td></tr><tr><td>O</td><td>0.9181403487173658</td></tr><tr><td>B-ADJP</td><td>0.886517572115682</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": true,\n\"type\": \"node\"},\n{\"x\": 250,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.6474296705987113</td></tr><tr><td>B-PP</td><td>0.9181403487173658</td></tr><tr><td>I-NP</td><td>0.7254228141559502</td></tr><tr><td>B-VP</td><td>0.8232455532033676</td></tr><tr><td>I-VP</td><td>0.7365098135805752</td></tr><tr><td>B-SBAR</td><td>0.7158068939970273</td></tr><tr><td>O</td><td>0.7516227766016838</td></tr><tr><td>B-ADJP</td><td>0.7516227766016839</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": false,\n\"type\": \"node\"},\n{\"x\": 500,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.9181403487173659</td></tr><tr><td>B-PP</td><td>0.7516227766016839</td></tr><tr><td>I-NP</td><td>0.684894560608927</td></tr><tr><td>B-VP</td><td>0.6916227766016838</td></tr><tr><td>I-VP</td><td>0.6276043366352357</td></tr><tr><td>B-SBAR</td><td>0.6916227766016838</td></tr><tr><td>O</td><td>0.8232455532033676</td></tr><tr><td>B-ADJP</td><td>0.7916227766016838</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": false,\n\"type\": \"node\"},\n{\"x\": 750,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>0.6874296705987113</td></tr><tr><td>B-PP</td><td>0.9181403487173659</td></tr><tr><td>I-NP</td><td>0.8066907731746132</td></tr><tr><td>B-VP</td><td>0.7632455532033675</td></tr><tr><td>I-VP</td><td>0.6676043366352358</td></tr><tr><td>B-SBAR</td><td>0.6916227766016838</td></tr><tr><td>O</td><td>0.819052447200395</td></tr><tr><td>B-ADJP</td><td>0.7632455532033675</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": true,\n\"type\": \"node\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(0))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(1))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(2))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(3))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(0)), SeqAtom(_hidden,(0 until 4)(0))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(1)), SeqAtom(_hidden,(0 until 4)(1))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(2)), SeqAtom(_hidden,(0 until 4)(2))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(3)), SeqAtom(_hidden,(0 until 4)(3))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('pair,Vector(SeqAtom(_hidden,(0 until 4 - 1)(0)), SeqAtom(_hidden,(0 until 4 - 1)(0) + 1)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('pair,Vector(SeqAtom(_hidden,(0 until 4 - 1)(1)), SeqAtom(_hidden,(0 until 4 - 1)(1) + 1)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('pair,Vector(SeqAtom(_hidden,(0 until 4 - 1)(2)), SeqAtom(_hidden,(0 until 4 - 1)(2) + 1)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"log(I(LengthAtom(_hidden) === 4))\"}],\n\"links\": [{\"target\": 1, \"source\": 5},\n{\"target\": 2, \"source\": 6},\n{\"target\": 3, \"source\": 7},\n{\"target\": 4, \"source\": 8},\n{\"target\": 1, \"source\": 9},\n{\"target\": 2, \"source\": 10},\n{\"target\": 3, \"source\": 11},\n{\"target\": 4, \"source\": 12},\n{\"target\": 1, \"source\": 13},\n{\"target\": 2, \"source\": 13},\n{\"target\": 2, \"source\": 14},\n{\"target\": 3, \"source\": 14},\n{\"target\": 3, \"source\": 15},\n{\"target\": 4, \"source\": 15},\n{\"target\": 0, \"source\": 16}]},\n\"schedule\": [[{\"edge\": 14,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>LengthGroundAtom(_hidden)</i></td><td></td></tr><tr><td>0</td><td>-Infinity</td></tr><tr><td>1</td><td>-Infinity</td></tr><tr><td>2</td><td>-Infinity</td></tr><tr><td>3</td><td>-Infinity</td></tr><tr><td>4</td><td>0.0</td></tr><tr><td>5</td><td>-Infinity</td></tr><tr><td>6</td><td>-Infinity</td></tr><tr><td>7</td><td>-Infinity</td></tr><tr><td>8</td><td>-Infinity</td></tr><tr><td>9</td><td>-Infinity</td></tr><tr><td>10</td><td>-Infinity</td></tr><tr><td>11</td><td>-Infinity</td></tr><tr><td>12</td><td>-Infinity</td></tr><tr><td>13</td><td>-Infinity</td></tr><tr><td>14</td><td>-Infinity</td></tr><tr><td>15</td><td>-Infinity</td></tr><tr><td>16</td><td>-Infinity</td></tr><tr><td>17</td><td>-Infinity</td></tr><tr><td>18</td><td>-Infinity</td></tr><tr><td>19</td><td>-Infinity</td></tr><tr><td>20</td><td>-Infinity</td></tr><tr><td>21</td><td>-Infinity</td></tr><tr><td>22</td><td>-Infinity</td></tr><tr><td>23</td><td>-Infinity</td></tr><tr><td>24</td><td>-Infinity</td></tr><tr><td>25</td><td>-Infinity</td></tr><tr><td>26</td><td>-Infinity</td></tr><tr><td>27</td><td>-Infinity</td></tr><tr><td>28</td><td>-Infinity</td></tr><tr><td>29</td><td>-Infinity</td></tr><tr><td>30</td><td>-Infinity</td></tr><tr><td>31</td><td>-Infinity</td></tr><tr><td>32</td><td>-Infinity</td></tr><tr><td>33</td><td>-Infinity</td></tr><tr><td>34</td><td>-Infinity</td></tr><tr><td>35</td><td>-Infinity</td></tr><tr><td>36</td><td>-Infinity</td></tr><tr><td>37</td><td>-Infinity</td></tr></table>\"}],\n[{\"edge\": 3,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 7,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>0.0</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>0.0</td></tr><tr><td>B-VP</td><td>0.0</td></tr><tr><td>I-VP</td><td>0.0</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 2,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 6,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.1</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>-0.1</td></tr><tr><td>B-VP</td><td>0.0</td></tr><tr><td>I-VP</td><td>-0.1</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 13,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 12,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.33071067811865473</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.3047213595499958</td></tr><tr><td>B-VP</td><td>0.16</td></tr><tr><td>I-VP</td><td>0.16</td></tr><tr><td>B-SBAR</td><td>0.16</td></tr><tr><td>O</td><td>0.26</td></tr><tr><td>B-ADJP</td><td>0.26</td></tr></table>\"}],\n[{\"edge\": 1,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 5,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.1</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>0.0</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.0</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 11,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.35580689399702736</td></tr><tr><td>B-PP</td><td>0.32</td></tr><tr><td>I-NP</td><td>0.25327178400724315</td></tr><tr><td>B-VP</td><td>0.26</td></tr><tr><td>I-VP</td><td>0.095981560033552</td></tr><tr><td>B-SBAR</td><td>0.26</td></tr><tr><td>O</td><td>0.3916227766016838</td></tr><tr><td>B-ADJP</td><td>0.36</td></tr></table>\"}],\n[{\"edge\": 10,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.49162277660168385</td></tr><tr><td>B-PP</td><td>0.5265175721156821</td></tr><tr><td>I-NP</td><td>0.545249613097019</td></tr><tr><td>B-VP</td><td>0.3916227766016838</td></tr><tr><td>I-VP</td><td>0.5005282535470231</td></tr><tr><td>B-SBAR</td><td>0.45580689399702734</td></tr><tr><td>O</td><td>0.45999999999999996</td></tr><tr><td>B-ADJP</td><td>0.42000000000000004</td></tr></table>\"}],\n[{\"edge\": 0,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 4,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.0</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>0.0</td></tr><tr><td>B-VP</td><td>0.0</td></tr><tr><td>I-VP</td><td>0.0</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 9,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.31671899248005647</td></tr><tr><td>B-PP</td><td>0.6865175721156821</td></tr><tr><td>I-NP</td><td>0.5938000375542664</td></tr><tr><td>B-VP</td><td>0.5916227766016838</td></tr><tr><td>I-VP</td><td>0.5365098135805751</td></tr><tr><td>B-SBAR</td><td>0.5558068939970273</td></tr><tr><td>O</td><td>0.5916227766016837</td></tr><tr><td>B-ADJP</td><td>0.52</td></tr></table>\"}],\n[{\"edge\": 8,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.8572282502343369</td></tr><tr><td>B-PP</td><td>0.6865175721156821</td></tr><tr><td>I-NP</td><td>0.8312389316656779</td></tr><tr><td>B-VP</td><td>0.6865175721156821</td></tr><tr><td>I-VP</td><td>0.6865175721156821</td></tr><tr><td>B-SBAR</td><td>0.6865175721156821</td></tr><tr><td>O</td><td>0.7865175721156821</td></tr><tr><td>B-ADJP</td><td>0.7865175721156821</td></tr></table>\"}],\n[{\"edge\": 8,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 9,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.33071067811865473</td></tr><tr><td>B-PP</td><td>0.23162277660168382</td></tr><tr><td>I-NP</td><td>0.1316227766016838</td></tr><tr><td>B-VP</td><td>0.23162277660168382</td></tr><tr><td>I-VP</td><td>0.2</td></tr><tr><td>B-SBAR</td><td>0.16</td></tr><tr><td>O</td><td>0.16</td></tr><tr><td>B-ADJP</td><td>0.23162277660168382</td></tr></table>\"}],\n[{\"edge\": 4,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.7823244661127096</td></tr><tr><td>B-PP</td><td>0.8465175721156821</td></tr><tr><td>I-NP</td><td>0.8797893561229252</td></tr><tr><td>B-VP</td><td>0.7865175721156821</td></tr><tr><td>I-VP</td><td>0.7224991321492341</td></tr><tr><td>B-SBAR</td><td>0.7865175721156821</td></tr><tr><td>O</td><td>0.9181403487173658</td></tr><tr><td>B-ADJP</td><td>0.886517572115682</td></tr></table>\"}],\n[{\"edge\": 0,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.8572282502343369</td></tr><tr><td>B-PP</td><td>0.6865175721156821</td></tr><tr><td>I-NP</td><td>0.8312389316656779</td></tr><tr><td>B-VP</td><td>0.6865175721156821</td></tr><tr><td>I-VP</td><td>0.6865175721156821</td></tr><tr><td>B-SBAR</td><td>0.6865175721156821</td></tr><tr><td>O</td><td>0.7865175721156821</td></tr><tr><td>B-ADJP</td><td>0.7865175721156821</td></tr></table>\"}],\n[{\"edge\": 10,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.15580689399702735</td></tr><tr><td>B-PP</td><td>0.3916227766016838</td></tr><tr><td>I-NP</td><td>0.18017320105893114</td></tr><tr><td>B-VP</td><td>0.4316227766016838</td></tr><tr><td>I-VP</td><td>0.23598156003355203</td></tr><tr><td>B-SBAR</td><td>0.26</td></tr><tr><td>O</td><td>0.2916227766016838</td></tr><tr><td>B-ADJP</td><td>0.3316227766016838</td></tr></table>\"}]]};\n                FG.create(\"fg-537537940720325216\", fgData);\n             });\n    </script></div>"
    }
  }, {
    "id" : 6,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "//Add skip-chain features to the model\ndef skipTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \n    sum(0 until x.length - 2)(i => t dot feature('skip, y(i), y(i+2)))\n\ndef newModel(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y) + skipTerms(t)(x, y)\n} subjectTo (y.length === x.length) argmaxBy maxProduct\n\nval newTheta = learn(Thetas){ t => \n    perceptron(train.toConst)(Outputs)(newModel(t))\n} using adaGrad\n\nval newResult = argmax(Outputs){ newModel(thetaStar.toConst)(Inputs.Const(test))}.evalResult()\n",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\",\"// Define the domain of inputs, outputs and parameters\\nval maxLength = train.map(_._2.length).max\\nimplicit val Inputs = Seqs(words.toDom withOOV \\\"[OOV]\\\", 0, maxLength)\\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\\nimplicit val Instances = Pairs(Inputs, Outputs)\\nimplicit val Thetas = Vectors(dim = 20000)\",\"// Define the model\\nimplicit val index = new SimpleIndex()\\nimplicit val maxProductParams = MaxProductParameters(iterations = 1)\\n\\ndef biasTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) =\\n    sum(0 until x.length)(i => t dot feature('bias, y(i)))\\n    \\ndef wordTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length)(i => t dot feature('word, x(i), y(i)))\\n    \\ndef pairTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length - 1)(i => t dot feature('pair, y(i), y(i+1)))\\n    \\ndef model(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y)\\n} subjectTo (y.length === x.length) argmaxBy maxProduct\",\"// Learn the parameters with AdaGrad\\nimplicit val adagradPparams = AdaGradParameters(epochs = 1, learningRate = 0.1)\\n\\nval thetaStar = learn(Thetas){ t =>\\n    perceptron(train.toConst)(Outputs)(model(t))\\n} using adaGrad\",\"// Predict the labels for an unseen test example\\ndef predict(x:Inputs.Value) = argmax(Outputs){\\n    model(thetaStar.toConst)(Inputs.Const(x))\\n}\\nval test = IndexedSeq(\\\"This\\\", \\\"is\\\", \\\"a\\\", \\\"test\\\")\\nval result = predict(test).evalResult()\",\"// The factor graph used in inference\\nresult.factorGraphs.head\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><span class=\"asString String\">Vector(O, B-PP, B-NP, B-PP)</span></div>"
    }
  }, {
    "id" : 7,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "newResult.factorGraphs.head",
      "extraFields" : {
        "aggregatedCells" : "[\"// Load dataset from the CoNLL-2000 Chunking Shared Task\\nval train = CoNLL2000.train.take(2).toSeq\\nval labels = train.flatMap(_._2).distinct\\nval words = train.flatMap(_._1).distinct\\nwords.take(5)\",\"// Define the domain of inputs, outputs and parameters\\nval maxLength = train.map(_._2.length).max\\nimplicit val Inputs = Seqs(words.toDom withOOV \\\"[OOV]\\\", 0, maxLength)\\nimplicit val Outputs = Seqs(labels.toDom, 0, maxLength)\\nimplicit val Instances = Pairs(Inputs, Outputs)\\nimplicit val Thetas = Vectors(dim = 20000)\",\"// Define the model\\nimplicit val index = new SimpleIndex()\\nimplicit val maxProductParams = MaxProductParameters(iterations = 1)\\n\\ndef biasTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) =\\n    sum(0 until x.length)(i => t dot feature('bias, y(i)))\\n    \\ndef wordTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length)(i => t dot feature('word, x(i), y(i)))\\n    \\ndef pairTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length - 1)(i => t dot feature('pair, y(i), y(i+1)))\\n    \\ndef model(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y)\\n} subjectTo (y.length === x.length) argmaxBy maxProduct\",\"// Learn the parameters with AdaGrad\\nimplicit val adagradPparams = AdaGradParameters(epochs = 1, learningRate = 0.1)\\n\\nval thetaStar = learn(Thetas){ t =>\\n    perceptron(train.toConst)(Outputs)(model(t))\\n} using adaGrad\",\"// Predict the labels for an unseen test example\\ndef predict(x:Inputs.Value) = argmax(Outputs){\\n    model(thetaStar.toConst)(Inputs.Const(x))\\n}\\nval test = IndexedSeq(\\\"This\\\", \\\"is\\\", \\\"a\\\", \\\"test\\\")\\nval result = predict(test).evalResult()\",\"// The factor graph used in inference\\nresult.factorGraphs.head\",\"//Add skip-chain features to the model\\ndef skipTerms(t: Thetas.Term)(x:Inputs.Term, y: Outputs.Term) = \\n    sum(0 until x.length - 2)(i => t dot feature('skip, y(i), y(i+2)))\\n\\ndef newModel(t: Thetas.Term)(x: Inputs.Term)(y: Outputs.Term) = {\\n    biasTerms(t)(x, y) + wordTerms(t)(x, y) + pairTerms(t)(x, y) + skipTerms(t)(x, y)\\n} subjectTo (y.length === x.length) argmaxBy maxProduct\\n\\nval newTheta = learn(Thetas){ t => \\n    perceptron(train.toConst)(Outputs)(newModel(t))\\n} using adaGrad\\n\\nval newResult = argmax(Outputs){ newModel(thetaStar.toConst)(Inputs.Const(test))}.evalResult()\\n\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><div id=\"fg-7870117811002703704\"><div class=\"playbtn\">Play</div><svg class=\"factorgraph\" width=\"750\" height=\"300\" style=\"overflow: visible;\"><defs><marker id=\"markerArrow0\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow1\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow2\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow3\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow4\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow5\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow6\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow7\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow8\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow9\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow10\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow11\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow12\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow13\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow14\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow15\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow16\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow17\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker><marker id=\"markerArrow18\" class=\"markerArrow\" markerWidth=\"100\" markerHeight=\"100\" refX=\"0\" orient=\"auto\"><path d=\"M0,-3.6042171212021317L4.161791450287818,3.6042171212021317 -4.161791450287818,3.6042171212021317Z\" fill=\"white\"></path></marker></defs><line class=\"link\" x1=\"57.81077437109966\" y1=\"97.13736186279544\" x2=\"25\" y2=\"150\"></line><line class=\"link\" x1=\"398.5181913974985\" y1=\"25\" x2=\"367.0587800101127\" y2=\"85.5867127540834\"></line><line class=\"link\" x1=\"432.122427555126\" y1=\"222.23079502845397\" x2=\"380.6541789531435\" y2=\"178.98735272415055\"></line><line class=\"link\" x1=\"689.5440715009366\" y1=\"201.08850688230774\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"61.27158575821532\" y1=\"200.13208908579787\" x2=\"25\" y2=\"150\"></line><line class=\"link\" x1=\"333.8802097029292\" y1=\"26.104345422120584\" x2=\"367.0587800101127\" y2=\"85.5867127540834\"></line><line class=\"link\" x1=\"377.04675101233505\" y1=\"245.73051976658212\" x2=\"380.6541789531435\" y2=\"178.98735272415055\"></line><line class=\"link\" x1=\"689.0460667022282\" y1=\"98.67005272742351\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"198.96808711347794\" y1=\"107.46477824811508\" x2=\"25\" y2=\"150\"></line><line class=\"link\" x1=\"198.96808711347794\" y1=\"107.46477824811508\" x2=\"367.0587800101127\" y2=\"85.5867127540834\"></line><line class=\"link\" x1=\"409.03461654985153\" y1=\"125.27330245490013\" x2=\"367.0587800101127\" y2=\"85.5867127540834\"></line><line class=\"link\" x1=\"409.03461654985153\" y1=\"125.27330245490013\" x2=\"380.6541789531435\" y2=\"178.98735272415055\"></line><line class=\"link\" x1=\"550.9037863941811\" y1=\"170.96735403345104\" x2=\"380.6541789531435\" y2=\"178.98735272415055\"></line><line class=\"link\" x1=\"550.9037863941811\" y1=\"170.96735403345104\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"206.91825866809683\" y1=\"167.5004899108543\" x2=\"25\" y2=\"150\"></line><line class=\"link\" x1=\"206.91825866809683\" y1=\"167.5004899108543\" x2=\"380.6541789531435\" y2=\"178.98735272415055\"></line><line class=\"link\" x1=\"543.3223542318834\" y1=\"108.56939621393704\" x2=\"367.0587800101127\" y2=\"85.5867127540834\"></line><line class=\"link\" x1=\"543.3223542318834\" y1=\"108.56939621393704\" x2=\"725\" y2=\"150\"></line><line class=\"link\" x1=\"219.41308191924537\" y1=\"275\" x2=\"278.33967390452597\" y2=\"275\"></line><path class=\"fgshape fgnode\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(278.33967390452597,275)\"></path><path class=\"fgshape fgnode fgfixed\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(25,150)\"></path><path class=\"fgshape fgnode\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(367.0587800101127,85.5867127540834)\"></path><path class=\"fgshape fgnode\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(380.6541789531435,178.98735272415055)\"></path><path class=\"fgshape fgnode fgfixed\" d=\"M0,25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,-25.2313252202016A25.2313252202016,25.2313252202016 0 1,1 0,25.2313252202016Z\" transform=\"translate(725,150)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(57.81077437109966,97.13736186279544)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(398.5181913974985,25)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(432.122427555126,222.23079502845397)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(689.5440715009366,201.08850688230774)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(61.27158575821532,200.13208908579787)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(333.8802097029292,26.104345422120584)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(377.04675101233505,245.73051976658212)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(689.0460667022282,98.67005272742351)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(198.96808711347794,107.46477824811508)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(409.03461654985153,125.27330245490013)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(550.9037863941811,170.96735403345104)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(206.91825866809683,167.5004899108543)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(543.3223542318834,108.56939621393704)\"></path><path class=\"fgshape fgfactor\" d=\"M-11.180339887498949,-11.180339887498949L11.180339887498949,-11.180339887498949 11.180339887498949,11.180339887498949 -11.180339887498949,11.180339887498949Z\" transform=\"translate(219.41308191924537,275)\"></path><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(278.33967390452597,275)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(25,150)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(367.0587800101127,85.5867127540834)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(380.6541789531435,178.98735272415055)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(725,150)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(57.81077437109966,97.13736186279544)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(398.5181913974985,25)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(432.122427555126,222.23079502845397)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(689.5440715009366,201.08850688230774)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(61.27158575821532,200.13208908579787)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(333.8802097029292,26.104345422120584)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(377.04675101233505,245.73051976658212)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(689.0460667022282,98.67005272742351)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(198.96808711347794,107.46477824811508)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(409.03461654985153,125.27330245490013)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(550.9037863941811,170.96735403345104)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(206.91825866809683,167.5004899108543)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(543.3223542318834,108.56939621393704)\" style=\"font-size: 15px;\"></text><text class=\"label\" text-anchor=\"middle\" dy=\".35em\" transform=\"translate(219.41308191924537,275)\" style=\"font-size: 15px;\"></text></svg></div>\n\n <link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/stylesheets/factorgraph/fg.css\">\n\n<script type=\"text/javascript\">\n             var fgScriptLocation;\n             if (typeof fgScriptLocation === 'undefined') {\n                fgScriptLocation = \"/assets/javascripts/factorgraph/fg.js\";\n                head.js(fgScriptLocation);\n             }\n             head.ready(function() {\n                var fgData =\n{\"width\": 750,\n\"height\": 300,\n\"graph\": {\"nodes\": [{\"x\": 99.9832938600981,\n\"y\": 135.9616531066328,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>LengthGroundAtom(_hidden)</i></td><td></td></tr><tr><td>0</td><td>-Infinity</td></tr><tr><td>1</td><td>-Infinity</td></tr><tr><td>2</td><td>-Infinity</td></tr><tr><td>3</td><td>-Infinity</td></tr><tr><td>4</td><td>0.0</td></tr><tr><td>5</td><td>-Infinity</td></tr><tr><td>6</td><td>-Infinity</td></tr><tr><td>7</td><td>-Infinity</td></tr><tr><td>8</td><td>-Infinity</td></tr><tr><td>9</td><td>-Infinity</td></tr><tr><td>10</td><td>-Infinity</td></tr><tr><td>11</td><td>-Infinity</td></tr><tr><td>12</td><td>-Infinity</td></tr><tr><td>13</td><td>-Infinity</td></tr><tr><td>14</td><td>-Infinity</td></tr><tr><td>15</td><td>-Infinity</td></tr><tr><td>16</td><td>-Infinity</td></tr><tr><td>17</td><td>-Infinity</td></tr><tr><td>18</td><td>-Infinity</td></tr><tr><td>19</td><td>-Infinity</td></tr><tr><td>20</td><td>-Infinity</td></tr><tr><td>21</td><td>-Infinity</td></tr><tr><td>22</td><td>-Infinity</td></tr><tr><td>23</td><td>-Infinity</td></tr><tr><td>24</td><td>-Infinity</td></tr><tr><td>25</td><td>-Infinity</td></tr><tr><td>26</td><td>-Infinity</td></tr><tr><td>27</td><td>-Infinity</td></tr><tr><td>28</td><td>-Infinity</td></tr><tr><td>29</td><td>-Infinity</td></tr><tr><td>30</td><td>-Infinity</td></tr><tr><td>31</td><td>-Infinity</td></tr><tr><td>32</td><td>-Infinity</td></tr><tr><td>33</td><td>-Infinity</td></tr><tr><td>34</td><td>-Infinity</td></tr><tr><td>35</td><td>-Infinity</td></tr><tr><td>36</td><td>-Infinity</td></tr><tr><td>37</td><td>-Infinity</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": false,\n\"type\": \"node\"},\n{\"x\": 0,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>1.3339472427143932</td></tr><tr><td>B-PP</td><td>1.3981403487173658</td></tr><tr><td>I-NP</td><td>1.431412132724609</td></tr><tr><td>B-VP</td><td>1.338140348717366</td></tr><tr><td>I-VP</td><td>1.274121908750918</td></tr><tr><td>B-SBAR</td><td>1.338140348717366</td></tr><tr><td>O</td><td>1.4697631253190497</td></tr><tr><td>B-ADJP</td><td>1.4381403487173658</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": true,\n\"type\": \"node\"},\n{\"x\": 250,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>1.199052447200395</td></tr><tr><td>B-PP</td><td>1.4697631253190495</td></tr><tr><td>I-NP</td><td>1.277045590757634</td></tr><tr><td>B-VP</td><td>1.3748683298050512</td></tr><tr><td>I-VP</td><td>1.288132590182259</td></tr><tr><td>B-SBAR</td><td>1.267429670598711</td></tr><tr><td>O</td><td>1.3032455532033675</td></tr><tr><td>B-ADJP</td><td>1.3032455532033675</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": false,\n\"type\": \"node\"},\n{\"x\": 500,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>2.5479034740364157</td></tr><tr><td>B-PP</td><td>2.3813859019207335</td></tr><tr><td>I-NP</td><td>2.3146576859279766</td></tr><tr><td>B-VP</td><td>2.3213859019207335</td></tr><tr><td>I-VP</td><td>2.2573674619542854</td></tr><tr><td>B-SBAR</td><td>2.3213859019207335</td></tr><tr><td>O</td><td>2.4530086785224174</td></tr><tr><td>B-ADJP</td><td>2.4213859019207336</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": false,\n\"type\": \"node\"},\n{\"x\": 750,\n\"y\": 150,\n\"hoverhtml\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>3.62695592123681</td></tr><tr><td>B-PP</td><td>3.8576665993554653</td></tr><tr><td>I-NP</td><td>3.7462170238127124</td></tr><tr><td>B-VP</td><td>3.7027718038414674</td></tr><tr><td>I-VP</td><td>3.6071305872733355</td></tr><tr><td>B-SBAR</td><td>3.631149027239783</td></tr><tr><td>O</td><td>3.7585786978384945</td></tr><tr><td>B-ADJP</td><td>3.7027718038414674</td></tr></table>\",\n\"text\": \"\",\n\"fixed\": true,\n\"type\": \"node\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(0))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(1))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(2))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('bias,Vector(SeqAtom(_hidden,(0 until 4)(3))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(0)), SeqAtom(_hidden,(0 until 4)(0))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(1)), SeqAtom(_hidden,(0 until 4)(1))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(2)), SeqAtom(_hidden,(0 until 4)(2))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('word,Vector(ISeq(4)(This,is,a,test)((0 until 4)(3)), SeqAtom(_hidden,(0 until 4)(3))),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('pair,Vector(SeqAtom(_hidden,(0 until 4 - 1)(0)), SeqAtom(_hidden,(0 until 4 - 1)(0) + 1)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('pair,Vector(SeqAtom(_hidden,(0 until 4 - 1)(1)), SeqAtom(_hidden,(0 until 4 - 1)(1) + 1)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('pair,Vector(SeqAtom(_hidden,(0 until 4 - 1)(2)), SeqAtom(_hidden,(0 until 4 - 1)(2) + 1)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('skip,Vector(SeqAtom(_hidden,(0 until 4 - 2)(0)), SeqAtom(_hidden,(0 until 4 - 2)(0) + 2)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"Tensor1(-0.07490378412162739,0.16,0.048550424457247346,0.1,0.035981560033552004,0.1,0.1316227766016838,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.05527864045000421,0.1,0.0,0.1,0.1,0.1,0.0,0.1,0.1,0.0,0.1,0.1,0.0,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.0,0.1,0.1,0.1,0.1,0.1,0.1,0.17071067811865476,0.17071067811865476,0.17071067811865476,0.1,0.1,0.02191311905569697,0.1447213595499958,0.008618845137974271...) dot Feature('skip,Vector(SeqAtom(_hidden,(0 until 4 - 2)(1)), SeqAtom(_hidden,(0 until 4 - 2)(1) + 2)),1.0)\"},\n{\"type\": \"factor\",\n\"hoverhtml\": \"log(I(LengthAtom(_hidden) === 4))\"}],\n\"links\": [{\"target\": 1, \"source\": 5},\n{\"target\": 2, \"source\": 6},\n{\"target\": 3, \"source\": 7},\n{\"target\": 4, \"source\": 8},\n{\"target\": 1, \"source\": 9},\n{\"target\": 2, \"source\": 10},\n{\"target\": 3, \"source\": 11},\n{\"target\": 4, \"source\": 12},\n{\"target\": 1, \"source\": 13},\n{\"target\": 2, \"source\": 13},\n{\"target\": 2, \"source\": 14},\n{\"target\": 3, \"source\": 14},\n{\"target\": 3, \"source\": 15},\n{\"target\": 4, \"source\": 15},\n{\"target\": 1, \"source\": 16},\n{\"target\": 3, \"source\": 16},\n{\"target\": 2, \"source\": 17},\n{\"target\": 4, \"source\": 17},\n{\"target\": 0, \"source\": 18}]},\n\"schedule\": [[{\"edge\": 18,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>LengthGroundAtom(_hidden)</i></td><td></td></tr><tr><td>0</td><td>-Infinity</td></tr><tr><td>1</td><td>-Infinity</td></tr><tr><td>2</td><td>-Infinity</td></tr><tr><td>3</td><td>-Infinity</td></tr><tr><td>4</td><td>0.0</td></tr><tr><td>5</td><td>-Infinity</td></tr><tr><td>6</td><td>-Infinity</td></tr><tr><td>7</td><td>-Infinity</td></tr><tr><td>8</td><td>-Infinity</td></tr><tr><td>9</td><td>-Infinity</td></tr><tr><td>10</td><td>-Infinity</td></tr><tr><td>11</td><td>-Infinity</td></tr><tr><td>12</td><td>-Infinity</td></tr><tr><td>13</td><td>-Infinity</td></tr><tr><td>14</td><td>-Infinity</td></tr><tr><td>15</td><td>-Infinity</td></tr><tr><td>16</td><td>-Infinity</td></tr><tr><td>17</td><td>-Infinity</td></tr><tr><td>18</td><td>-Infinity</td></tr><tr><td>19</td><td>-Infinity</td></tr><tr><td>20</td><td>-Infinity</td></tr><tr><td>21</td><td>-Infinity</td></tr><tr><td>22</td><td>-Infinity</td></tr><tr><td>23</td><td>-Infinity</td></tr><tr><td>24</td><td>-Infinity</td></tr><tr><td>25</td><td>-Infinity</td></tr><tr><td>26</td><td>-Infinity</td></tr><tr><td>27</td><td>-Infinity</td></tr><tr><td>28</td><td>-Infinity</td></tr><tr><td>29</td><td>-Infinity</td></tr><tr><td>30</td><td>-Infinity</td></tr><tr><td>31</td><td>-Infinity</td></tr><tr><td>32</td><td>-Infinity</td></tr><tr><td>33</td><td>-Infinity</td></tr><tr><td>34</td><td>-Infinity</td></tr><tr><td>35</td><td>-Infinity</td></tr><tr><td>36</td><td>-Infinity</td></tr><tr><td>37</td><td>-Infinity</td></tr></table>\"}],\n[{\"edge\": 3,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 7,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>0.0</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>0.0</td></tr><tr><td>B-VP</td><td>0.0</td></tr><tr><td>I-VP</td><td>0.0</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 2,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 6,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.1</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>-0.1</td></tr><tr><td>B-VP</td><td>0.0</td></tr><tr><td>I-VP</td><td>-0.1</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 13,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 12,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.33071067811865473</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.3047213595499958</td></tr><tr><td>B-VP</td><td>0.16</td></tr><tr><td>I-VP</td><td>0.16</td></tr><tr><td>B-SBAR</td><td>0.16</td></tr><tr><td>O</td><td>0.26</td></tr><tr><td>B-ADJP</td><td>0.26</td></tr></table>\"}],\n[{\"edge\": 1,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 5,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.1</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>0.0</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.0</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 11,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.35580689399702736</td></tr><tr><td>B-PP</td><td>0.32</td></tr><tr><td>I-NP</td><td>0.25327178400724315</td></tr><tr><td>B-VP</td><td>0.26</td></tr><tr><td>I-VP</td><td>0.095981560033552</td></tr><tr><td>B-SBAR</td><td>0.26</td></tr><tr><td>O</td><td>0.3916227766016838</td></tr><tr><td>B-ADJP</td><td>0.36</td></tr></table>\"}],\n[{\"edge\": 10,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.49162277660168385</td></tr><tr><td>B-PP</td><td>0.5265175721156821</td></tr><tr><td>I-NP</td><td>0.545249613097019</td></tr><tr><td>B-VP</td><td>0.3916227766016838</td></tr><tr><td>I-VP</td><td>0.5005282535470231</td></tr><tr><td>B-SBAR</td><td>0.45580689399702734</td></tr><tr><td>O</td><td>0.45999999999999996</td></tr><tr><td>B-ADJP</td><td>0.42000000000000004</td></tr></table>\"}],\n[{\"edge\": 17,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,3)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 16,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.16</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.16</td></tr><tr><td>B-VP</td><td>0.16</td></tr><tr><td>I-VP</td><td>0.16</td></tr><tr><td>B-SBAR</td><td>0.16</td></tr><tr><td>O</td><td>0.16</td></tr><tr><td>B-ADJP</td><td>0.16</td></tr></table>\"}],\n[{\"edge\": 0,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>-0.07490378412162739</td></tr><tr><td>B-PP</td><td>0.16</td></tr><tr><td>I-NP</td><td>0.048550424457247346</td></tr><tr><td>B-VP</td><td>0.1</td></tr><tr><td>I-VP</td><td>0.035981560033552004</td></tr><tr><td>B-SBAR</td><td>0.1</td></tr><tr><td>O</td><td>0.1316227766016838</td></tr><tr><td>B-ADJP</td><td>0.1</td></tr></table>\"}],\n[{\"edge\": 4,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.0</td></tr><tr><td>B-PP</td><td>0.0</td></tr><tr><td>I-NP</td><td>0.0</td></tr><tr><td>B-VP</td><td>0.0</td></tr><tr><td>I-VP</td><td>0.0</td></tr><tr><td>B-SBAR</td><td>0.0</td></tr><tr><td>O</td><td>0.0</td></tr><tr><td>B-ADJP</td><td>0.0</td></tr></table>\"}],\n[{\"edge\": 9,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,1)</i></td><td></td></tr><tr><td>B-NP</td><td>0.47671899248005645</td></tr><tr><td>B-PP</td><td>0.8465175721156821</td></tr><tr><td>I-NP</td><td>0.7538000375542664</td></tr><tr><td>B-VP</td><td>0.7516227766016839</td></tr><tr><td>I-VP</td><td>0.6965098135805752</td></tr><tr><td>B-SBAR</td><td>0.7158068939970273</td></tr><tr><td>O</td><td>0.7516227766016838</td></tr><tr><td>B-ADJP</td><td>0.68</td></tr></table>\"}],\n[{\"edge\": 8,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>1.0172282502343368</td></tr><tr><td>B-PP</td><td>0.8465175721156821</td></tr><tr><td>I-NP</td><td>0.9912389316656779</td></tr><tr><td>B-VP</td><td>0.8465175721156821</td></tr><tr><td>I-VP</td><td>0.8465175721156821</td></tr><tr><td>B-SBAR</td><td>0.8465175721156821</td></tr><tr><td>O</td><td>0.9465175721156821</td></tr><tr><td>B-ADJP</td><td>0.9465175721156821</td></tr></table>\"}],\n[{\"edge\": 15,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,2)</i></td><td></td></tr><tr><td>B-NP</td><td>0.35580689399702736</td></tr><tr><td>B-PP</td><td>0.32</td></tr><tr><td>I-NP</td><td>0.25327178400724315</td></tr><tr><td>B-VP</td><td>0.26</td></tr><tr><td>I-VP</td><td>0.095981560033552</td></tr><tr><td>B-SBAR</td><td>0.26</td></tr><tr><td>O</td><td>0.3916227766016838</td></tr><tr><td>B-ADJP</td><td>0.36</td></tr></table>\"}],\n[{\"edge\": 14,\n\"direction\": \"F2N\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.3916227766016838</td></tr><tr><td>B-PP</td><td>0.3916227766016838</td></tr><tr><td>I-NP</td><td>0.3916227766016838</td></tr><tr><td>B-VP</td><td>0.3916227766016838</td></tr><tr><td>I-VP</td><td>0.3916227766016838</td></tr><tr><td>B-SBAR</td><td>0.3916227766016838</td></tr><tr><td>O</td><td>0.3916227766016838</td></tr><tr><td>B-ADJP</td><td>0.3916227766016838</td></tr></table>\"}],\n[{\"edge\": 14,\n\"direction\": \"N2F\",\n\"msg\": \"<table class='potentialtable'><tr><td><i>SeqGroundAtom(_hidden,0)</i></td><td></td></tr><tr><td>B-NP</td><td>0.9423244661127095</td></tr><tr><td>B-PP</td><td>1.006517572115682</td></tr><tr><td>I-NP</td><td>1.0397893561229252</td></tr><tr><td>B-VP</td><td>0.9465175721156821</td></tr><tr><td>I-VP</td><td>0.8824991321492341</td></tr><tr><td>B-SBAR</td><td>0.9465175721156821</td></tr><tr><td>O</td><td>1.078140348717366</td></tr><tr><td>B-ADJP</td><td>1.046517572115682</td></tr></table>\"}]]};\n                FG.create(\"fg-7870117811002703704\", fgData);\n             });\n    </script></div>"
    }
  }, {
    "id" : 8,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "",
      "extraFields" : { },
      "outputFormat" : ""
    }
  } ],
  "config" : { }
}
